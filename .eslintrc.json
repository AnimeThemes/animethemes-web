{
    "extends": [
        "next/core-web-vitals",
        "plugin:react/recommended",
        "eslint:recommended"
    ],
    "ignorePatterns": [
        "src/generated"
    ],
    "plugins": ["simple-import-sort"],
    "rules": {
        "semi": [
            "error",
            "always"
        ],
        "quotes": [
            "error",
            "double",
            {
                "allowTemplateLiterals": true
            }
        ],
        "curly": [
            "error",
            "all"
        ],
        "object-curly-spacing": [
            "error",
            "always"
        ],
        "indent": [
            "error",
            4,
            {
                "SwitchCase": 1
            }
        ],
        "react/react-in-jsx-scope": "off",
        "react/self-closing-comp": "error",
        // For now we don't habe prop-types validation
        "react/prop-types": "off",
        // Sort imports
        "simple-import-sort/imports": [
            "error",
            {
                "groups": [
                    // Packages that are used in almost all files.
                    ["^react$", "^react\\u0000$", "^styled-components", "^next"],
                    // All other packages.
                    ["^@?\\w"],
                    // Absolute imports and other imports such as Vue-style `@/foo`.
                    // Anything not matched in another group.
                    ["^"],
                    // Side effect imports.
                    ["^\\u0000"]
                ]
            }
        ],
        "simple-import-sort/exports": "error"
    },
    "overrides": [
        {
            "files": [
                "**/*.{ts,tsx}"
            ],
            "parser": "@typescript-eslint/parser",
            "plugins": [
                "@typescript-eslint"
            ],
            "extends": [
                "plugin:@typescript-eslint/recommended"
            ],
            "parserOptions": {
                "project": [
                    "./tsconfig.json"
                ]
            },
            "rules": {
                "@typescript-eslint/no-unused-vars": "error",
                "@typescript-eslint/no-empty-interface": [
                    "error",
                    {
                        "allowSingleExtends": true
                    }
                ],
                "@typescript-eslint/consistent-type-imports": [
                    "error",
                    {
                        "fixStyle": "inline-type-imports"
                    }
                ],
                "@typescript-eslint/consistent-type-exports": "error"
            }
        }
    ]
}
